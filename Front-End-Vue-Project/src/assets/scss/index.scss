#brim-mask {
    pointer-events: none;
}

#page {
    padding-top: 44px;
    background-color:#fff;
    transition: all .3s ease;
    overflow-x:hidden;
}

.show-menu {
    transform: translateX($gap*40);
}

/*
position属性规定元素的定位类型
①absolute：生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位，元素的位置通过"left", "top", "right"以及"bottom"属性进行规定
②fixed：生成绝对定位的元素，相对于浏览器窗口进行定位，元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定
③relative：生成相对定位的元素，相对于其正常位置进行定位，比如"left:20" 会向元素的LEFT位置添加20像素
④static：默认值，没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）
⑤inherit：规定应该从父元素继承position属性的值

z-index属性设置元素的堆叠顺序，拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面
 */
.page-cover {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0, 0, 0, .4);
    z-index: 7;
}


/*模块入口样式*/

.posts-list {
    background-color: $white;
    li {
        padding: 10px $padding;
        border-bottom: $border;
    }
    h3 {
        @extend .title;
        &:before {
            content: attr(title);
            margin-right: 10px;
            margin-top: -3px;
            @extend .tag;
            color: $white;
        }
        &.top:before {
            background: #E74C3C;
        }
        &.ask:before {
            background: #3498DB;
        }
        &.good:before {
            background: #E67E22;
        }
        &.job:before {
            background: #9B59B6;
        }
        &.share:before {
            background: #1ABC9C;
        }
    }
    .content {
        padding-top: 10px;
        display: flex;
    }
    .avatar {
       @extend .user-avatar;
    }
    .info {
        display: block;
        width: 100%;
        flex: 1;
    }
    p {
        padding: 3px 0;
        display: flex;
        color: $text;
        font-size: $font-info;

        &:first-child {
            font-size: $font-content;
        }
        .name, time:first-child {
           display: block;
           width: 100%;
           flex: 1;
        }
        b {
            color: #42b983;
        }
    }
}
