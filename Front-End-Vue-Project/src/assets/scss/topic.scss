.topic-title {
    padding: $gap;
    margin:$padding;
    font-size: 18px;
    color: $title;
    line-height: 1.5;
    background-color:$colorf0;
    border-radius:$gap;
}

/*
Flex布局将成为未来布局的首选方案，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效

以下6个属性设置在Flex容器上：
①flex-direction：决定主轴的方向（即项目的排列方向），包括row（默认值） | row-reverse | column | column-reverse
②flex-wrap：定义如果一条轴线排不下，如何换行，包括nowrap（默认值，不换行） | wrap | wrap-reverse
③flex-flow：是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap
④justify-content：定义了项目在主轴上的对齐方式，包括flex-start（默认值，左对齐） | flex-end（右对齐） | center（居中） | space-between（两端对齐，项目之间的间隔都相等） | space-around（每个项目两侧的间隔相等，项目之间的间隔比项目与边框的间隔大一倍）
⑤align-items：定义项目在交叉轴上如何对齐，包括flex-start（交叉轴的起点对齐） | flex-end（交叉轴的终点对齐） | center（交叉轴的中点对齐） | baseline（项目的第一行文字的基线对齐） | stretch（默认值，如果项目未设置高度或设为auto，将占满整个容器的高度）
⑥align-content：定义了多根轴线的对齐方式，如果项目只有一根轴线，该属性不起作用，包括flex-start | flex-end | center | space-between | space-around | stretch（默认值）
 */
.author-info {
    display: flex;
    align-items: center;
    padding: 0 $padding;
    color: $text;
    font-size: 12px;
    .col {
        display: block;
        width: 100%;
        flex: 1;
    }
    .avatar {
        display: block;
        width: 40px;
        height: 40px;
        margin-right: $padding;
        border-radius: 50%;
    }
  /*
  text-align 属性规定元素中的文本的水平对齐方式
   */
    .right{
        text-align: right;
    }
    span, time {
        display: block;
        padding: 5px 0;
    }
    .tag {
        @extend .tag;
        color: #ffffff;
      /* 带有连体符&，说明并非层次关系，而是并且关系 */
        &.top {
            background: #E74C3C;
        }
        &.ask {
            background: #3498DB;
        }
        &.good {
            background: #E67E22;
        }
        &.job {
            background: #9B59B6;
        }
        &.share {
            background: #1ABC9C;
        }
    }
}
.topic-content {
    padding: $padding;
    margin-top: $padding;
    background: #ffffff;
    border-bottom: solid 1px $colord4;
    .from{
        color:$red;
    }
}
.topic-reply {
    @extend .title;
    padding: $padding;
    border-bottom: solid 1px $colord4;
    strong {
        color: #42b983;
    }
}
.reply_num {
    margin-top: $gap*4;
    background-color: $colore7;
    padding: $gap*2 0 $gap*2 $gap*2;
    border-top: solid 1px $colord4;
    border-bottom: solid 1px $colord4;
}
.reply-list {
    width: 100%;
    margin-top: $gap*3;
    ul {
        width: 100%;
        list-style: none;
        padding-left: 0;
        li {
            width: 100%;
            list-style: none;
            border-bottom: solid 1px $colord4;
            &:last-child {
                border-bottom: none;
            }
            .uped {
                color: $color80;
            }
            .icon {
                font-size: 26px;
            }
            .from{
                color:$red;
            }
            .language-javascript{
                background-color:$colorf0;
                overflow-x:auto;
            }
        }
    }
}

/* 回复框样式 */

.reply {
    margin: 0 $padding;
    textarea {
        display: block;
        width: 100%;
        flex: 1;
        border: $border;
        background-color: #fff;
        font-size: 14px;
        padding: $padding;
        color: #313131;
    }
    .button {
        display: inline-block;
        width: 100%;
        height: 42px;
        margin: $padding 0;
        line-height: 42px;
        color: #fff;
        font-size: 16px;
        background-color: #4fc08d;
        border: none;
        border-bottom: 2px solid #3aa373;
        text-align: center;
        vertical-align: middle;
    }
}



